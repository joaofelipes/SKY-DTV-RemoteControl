// Copyright 2011 Jeremy Whitlock

(function(){var root=this;var previousDirecTV=root.DirecTV;var DirecTV=root.DirecTV={};var _=root._;var $=root.jQuery;DirecTV.VERSION='0.0.1';DirecTV.noConflict=function(){root.DirecTV=previousDirecTV;return this;};DirecTV.Remote=function(options){options||(options={});if(!options.ipAddress){throw new Error('options.ipAddress is not optional.');}
this.rid=_.uniqueId('dtvr');this.ipAddress=options.ipAddress;};_.extend(DirecTV.Remote.prototype,{Commands:['FA81','FA82','FA83','FA84','FA87','FA90','FA91','FA92','FA93','FA94','FA95','FA96','FAA5','FAA6','FA9A','FA8A','FA8B','FA9D','FA9F',],Holds:['keyUp','keyDown','keyPress'],Keys:['power','poweron','poweroff','format','pause','rew','replay','stop','advance','ffwd','record','play','guide','active','list','exit','back','menu','info','up','down','left','right','select','red','green','yellow','blue','chanup','chandown','prev','0','1','2','3','4','5','6','7','8','9','dash','enter'],validate:function(options){var path='/info/getOptions';var oldCallback;if(!/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/.test(this.ipAddress)){options.callback({status:{code:405,commandResult:1,msg:'Not a valid IP address',query:path}});}
if(!options.callback||typeof options.callback!=='function'){throw new Error('options.callback is not optional and must be a function.');}
oldCallback=options.callback;options.callback=function(data,textStatus,jqXHR){var response;if(data.options){response={status:{code:200,commandResult:0,msg:'Host is a DirecTV set-top-box',query:path}};}else{response={status:{code:404,commandResult:1,msg:'Host does not appear to be a DirecTV set-top-box',query:path}};}
oldCallback(response);};this.makeRequest({path:path,options:options});},getLocations:function(options){this.makeRequest({path:'/info/getLocations',options:options});},getVersion:function(options){this.makeRequest({path:'/info/getVersion',options:options,});},getMode:function(options){this.makeRequest({path:'/info/mode',options:options});},processKey:function(options){if(options&&!options.key){throw new Error('options.key is not optional.');}
this.makeRequest({path:'/remote/processKey',options:options});},processCommand:function(options){if(options&&!options.cmd){throw new Error('options.cmd is not optional.');}
this.makeRequest({path:'/serial/processCommand',options:options});},getOptions:function(options){this.makeRequest({path:'/info/getOptions',options:options});},getProgInfo:function(options){if(options&&!options.major){throw new Error('options.major is not optional.');}
this.makeRequest({path:'/tv/getProgInfo',options:options});},getTuned:function(options){this.makeRequest({path:'/tv/getTuned',options:options});},tune:function(options){if(options&&!options.major){throw new Error('options.major is not optional.');}
this.makeRequest({path:'/tv/tune',options:options});},makeRequest:function(requestOptions){requestOptions||(requestOptions={});requestOptions.options||(requestOptions.options={});var requestUrl='http://'+this.ipAddress+':8080';var requestQuery=requestOptions.path;var requestComplete=false;var knownRequestParams=['clientAddr','cmd','hold','key','major','minor','time','videoWindow','wrapper'];var i;if(!requestOptions.options.callback||typeof requestOptions.options.callback!=='function'){throw new Error('requestOptions.options.callback is not optional and must be a function.');}
if(!requestOptions.path){throw new Error('requestOptions.path is not optional.');}
if(_.intersection(knownRequestParams,_.keys(requestOptions.options)).length>0){requestQuery+='?';}
for(i=0;i<knownRequestParams.length;i++){var requestParam=knownRequestParams[i];if(requestOptions.options.hasOwnProperty(requestParam)){if(requestQuery.charAt(requestQuery.length-1)!=='?'){requestQuery+='&';}
requestQuery+=(requestParam+'='+requestOptions.options[requestParam]);}}
$.ajax({cache:true,dataType:'jsonp',url:requestUrl+requestQuery,type:'GET',success:function(data,textStatus,jqXHR){requestComplete=true;requestOptions.options.callback(data);}});setTimeout(function(){if(!requestComplete){var result={status:{code:404,msg:'Invalid request ('+requestUrl+'): The request was either for a non-DirecTV '+'set-top-box, was for an invalid endpoint of '+'a DirecTV set-top-box or the parameter(s) '+'passed to the endpoint were invalid.',commandResult:1,query:requestQuery}};requestOptions.options.callback(result);}},5000);}});}).call(this);
